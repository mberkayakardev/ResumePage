// <auto-generated />
using System;
using AkarSoftware.Resume.DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkarSoftware.Resume.DataAccess.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231231152319_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("UrlPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8351),
                            Description = ".Net Core MVC, Asp.Net MVC, Flask, Django ile web uygulamaları geliştirebiliyorum",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8365),
                            Name = "Web Uygulamaları",
                            OrderNumber = 1,
                            UrlPath = "/StaticFiles/website.png"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8366),
                            Description = "Winform, PyQt5, Tkinter, JFrame ile masaüstü uygulamalar geliştirebiliyorum.",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8367),
                            Name = "Masaüstü Uygulamalar",
                            OrderNumber = 2,
                            UrlPath = "/StaticFiles/computer.png"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8368),
                            Description = "Restfull - Web Api Geliştirmesi Yapabiliyorum",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8369),
                            Name = "Web Servisler",
                            OrderNumber = 3,
                            UrlPath = "/StaticFiles/api.png"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8370),
                            Description = "HTML, CSS, BOOSTRAP, JS, JQUERY, REACT ile ön yüz uygulamaları geliştirebiliyorum",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8371),
                            Name = "Front - End Geliştirme ",
                            OrderNumber = 4,
                            UrlPath = "/StaticFiles/frontend.png"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.AboutMe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AboutMes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8532),
                            Description = "<p><strong><strong><strong></strong></strong></strong></p><p><span style=\"letter-spacing: 0\">2021 yılında Düzce Üniversitesi Bilgisayar Mühendisliği bölümünden 3.03 ortalama mezun oldum. Genel olarak üniversite hayatım boyunca teorik ve uygulamalı olarak edinmiş olduğum bilgileri kurumsal firmalarda gerçekleştirmiş olduğum stajlar ve iş deneyimleri ile destekledim. Orta seviyede İngilizce bilgisine sahibim. Öğrenmeye ve çalışmaya açık bir insan olarak eğitim geçmişime ve kişisel&nbsp;</span><span style=\"letter-spacing: 0\">özelliklerime değer katabileceğim bir pozisyonda deneyim kazanmak ve süreçleri&nbsp;</span><span style=\"letter-spacing: 0\">gözlemlemek istiyorum.</span></p><ul><li><em>Çok Katmanlı Mimari</em> ile proje geliştirebiliyorum. (<strong>N-TIER ARCHITECTURE</strong>).</li><li><em>Django, Flask, ASP.NET Core W</em>eb frameworklerini kullanarak projeler geliştirebiliyorum.</li><li><em>MSSQL, MySQL</em>, <em>Oracle</em> ile veri tabanı yönetimi ve modellemesi yapabiliyorum.</li><li><em>Java, C#, Python</em> dillerinde projeler geliştirebiliyorum.&nbsp;</li><li><em>Devexpress, Windows Form, Pyqt5, Tkinter, Jframe</em> kullanarak masaüstü uygulamalar geliştirebiliyorum.</li><li><em>Windows Server 2012 R2</em> kullanım Orta Seviye <em>MacOS, Windows, Linux (Ubuntu)</em> Bilgisi.</li><li><em>Knime , Weka</em> gibi veri madenciliği araçlarını kullanabiliyorum ve <em>Sklearn, TensorFlow</em> kütüphanelerini kullanarak makine öğrenmesi, veri bilimi projeleri geliştirebiliyorum.</li><li><em>ODI</em> ve<em> SAP BODS</em> araçları kullanarak <em>ETL</em> süreçleri gerçekleştirebiliyorum.</li></ul><br><br><ul><li><strong>Github : https://github.com/mberkayakardev</strong></li><li><strong>Linkedin: https://www.linkedin.com/in/berkayakar/</strong></li></ul>",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8533)
                        });
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BornDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProfilePhotos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BornDate = new DateTime(1999, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8617),
                            CvPath = "/StaticFiles/BerkayAkarCV.pdf",
                            Email = "mberkayakar@outlook.com",
                            IsActive = true,
                            Location = "Bayrampaşa / İstanbul",
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(8618),
                            Name = "Berkay",
                            Password = "A665A45920422F9D417E4867EFDC4FB8A04A1F3FFF1FA07E998E86F7F7A27AE3",
                            PhoneNumber1 = "+90 534 564 34 10",
                            PhoneNumber2 = "+90 534 541 34 10",
                            Position = "Bilgisayar Mühendisi",
                            ProfilePhotos = "/StaticFiles/ProfilFoto.jpg",
                            Surname = "AKAR",
                            UserName = "mberkayakar"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.Badget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Badgets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9385),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9386),
                            Name = ".Net Core"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9387),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9388),
                            Name = ".Net FrameWork"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9389),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9389),
                            Name = "C#"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9390),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9390),
                            Name = ".Net Core MVC"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9391),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9392),
                            Name = ".Net Framework MVC"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9392),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9393),
                            Name = ".Net Core Web Api"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9394),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9394),
                            Name = "RestFull "
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9395),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9395),
                            Name = "Windows Forms "
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9396),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9396),
                            Name = "Devexpress"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9397),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9398),
                            Name = "Ado.Net"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9398),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9399),
                            Name = "Dapper"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9400),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9400),
                            Name = "Dapper.Contrib"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9401),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9401),
                            Name = "Entity Framework"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9402),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9403),
                            Name = "Sql Server"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9403),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9404),
                            Name = "T-SQL"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9405),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9405),
                            Name = "PL-SQL"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9406),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9406),
                            Name = "Oracle"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9407),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9407),
                            Name = "ODI"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9408),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9409),
                            Name = "SAP BODS"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9409),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9410),
                            Name = "AOP"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9411),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9411),
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9412),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9412),
                            Name = "HTML"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9413),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9413),
                            Name = "React"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9414),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9415),
                            Name = "CSS"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9416),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9416),
                            Name = "BOOSTRAP"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9417),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9417),
                            Name = "N-Tier Architecture"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9418),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9419),
                            Name = "UnitOfWork"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9419),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9420),
                            Name = "Repository Desing Pattern"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndDateFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartDateFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9548),
                            EducationDescription = "<p>Lisans &ouml;ğrenimim burada ger&ccedil;ekleşti.</p>\r\n<p><strong>Bilgisayar M&uuml;hendisliği</strong> B&ouml;l&uuml;m&uuml; i&ccedil;in <strong>Ortalama : 3.03</strong></p>",
                            EndDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDateFormat = "MM/yyyy",
                            ImagePath = "/StaticFiles/duzceuni.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9553),
                            Name = "Düzce Üniversitesi",
                            StartDate = new DateTime(2017, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDateFormat = "MM/yyyy",
                            SubName = "Bilgisayar Mühendisliği"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9555),
                            EducationDescription = "<p>İŞ-KUR kapsamında Nitelikli Bilişim Uzmanlığı eğitimi alındı.</p>",
                            EndDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDateFormat = "MM/yyyy",
                            ImagePath = "/StaticFiles/BilisimEgitimMerkezi.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9556),
                            Name = "Bilişim Eğitim Merkezi - IS-KUR",
                            StartDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDateFormat = "MM/yyyy",
                            SubName = "Nitelikli Bilişim Uzmanlığı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9557),
                            EducationDescription = "<p><strong>.Net Core</strong> i&ccedil;in <strong>FullStack</strong> Development &uuml;zerine bir eğitim alındı.</p>",
                            EndDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDateFormat = "MM/yyyy",
                            ImagePath = "/StaticFiles/my,.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9559),
                            Name = "Bilişim Eğitim Merkezi - IS-KUR",
                            StartDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDateFormat = "MM/yyyy",
                            SubName = "Nitelikli Bilişim Uzmanlığı"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.Experiance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndDateFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartDateFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Experiances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9640),
                            EducationDescription = "<ul style=\"box-sizing: border-box; margin: 0px; padding: 0px; list-style-type: none; max-height: 1e+06px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 0px; padding: 0px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">Horoz ERP projesi kapsamında N-Tier Achitechture Devexpress, Windows Form, Oracle ve şirket i&ccedil;i geliştirilmiş olan birtakım teknolojiler kullanılarak ERP projesi geliştirildi.</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">Honest &uuml;zerinden kullanıcılara destek verildi.</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">Kurum ihtiya&ccedil;ları doğrultusunda yazılım ekibi ile beraber yazılım geliştirme s&uuml;re&ccedil;lerinde yer alındı.</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">Dağıtım alan dışı, Rota optimizasyonu, Otomatik eskalasyon, E-İhracat projelerinde rol alındı.</li>\r\n</ul>",
                            EndDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDateFormat = "MM/yyyy",
                            ImagePath = "/StaticFiles/hl.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9642),
                            Name = "Horoz Lojistik Kargo Hizmetleri A.Ş.",
                            StartDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDateFormat = "MM/yyyy",
                            SubName = "Yazılım Uzmanı"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9643),
                            EducationDescription = "<ul style=\"box-sizing: border-box; margin: 0px; padding: 0px; list-style-type: none; max-height: 1e+06px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 0px; padding: 0px;\">Firma b&uuml;nyesinde Yazılım M&uuml;hendisi &uuml;nvanı ile .Net Core Web Api, Sql Server teknolojisini kullanarak backend projeleri geliştirdim.</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;\">Turkish Cargo Ara&ccedil; Backend ve Powerşarj projelerinde yer alındı. Geliştirme &ccedil;alışmalarında bulunuldu.</li>\r\n</ul>",
                            EndDate = new DateTime(2022, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDateFormat = "MM/yyyy",
                            ImagePath = "/StaticFiles/wr.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9644),
                            Name = "White Rose",
                            StartDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDateFormat = "MM/yyyy",
                            SubName = "Yazılım Mühendisi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9646),
                            EducationDescription = "<ul style=\"box-sizing: border-box; margin: 0px; padding: 0px; list-style-type: none; max-height: 1e+06px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 0px; padding: 0px;\">SAP ABAP &uuml;zerinde eğitimler alındı.&nbsp;</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;\">ABAP &uuml;zerinde programlama, geliştirme ve mod&uuml;llerin kullanımı &ouml;ğrenildi.</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;\">ODI ve BODS ile ETL s&uuml;re&ccedil;leri ger&ccedil;ekleştirildi.&nbsp;</li>\r\n</ul>",
                            EndDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDateFormat = "MM/yyyy",
                            ImagePath = "/StaticFiles/teampro.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9647),
                            Name = "TeamPro Danışmanlık Ve Bilişim Hizmetleri",
                            StartDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDateFormat = "MM/yyyy",
                            SubName = "Stajer"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9648),
                            EducationDescription = "<ul style=\"box-sizing: border-box; margin: 0px; padding: 0px; list-style-type: none; max-height: 1e+06px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 0px; padding: 0px;\">Firma b&uuml;nyesinde u&ccedil;tan uca veri bilimi s&uuml;re&ccedil;leri i&ccedil;erisinde bulunuldu.&nbsp;</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;\">Tensorflow, Sklearn, Matplotlib, Seaborn, Plotly k&uuml;t&uuml;phanelerini kullanarak veri bilimi projeleri ve veri analizleri ger&ccedil;ekleştirildi.&nbsp;</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;\">Knime, Weka ile u&ccedil;tan uca veri bilimi ara&ccedil;larını kullanarak projeler ger&ccedil;ekleştirildi. &Ccedil;ıkan modeller analiz edildi.&nbsp; &nbsp;</li>\r\n<li style=\"box-sizing: border-box; max-height: 1e+06px; list-style-position: inside; list-style-type: disc; margin: 8px 0px 0px; padding: 0px;\">Geliştirilen modelleri sekt&ouml;rde bilindik olan ara&ccedil;lar ile karşılaştırarak istatiksel olarak a&ccedil;ıklayacak makaleler yazdım.</li>\r\n</ul>",
                            EndDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDateFormat = "MM/yyyy",
                            ImagePath = "/StaticFiles/Optiwisdom.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9649),
                            Name = "Optiwisdom",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDateFormat = "MM/yyyy",
                            SubName = "Stajer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9650),
                            EducationDescription = "<p style=\"box-sizing: border-box; margin: 0px 0px 1rem; max-height: 1e+06px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">&bull; Nesne y&ouml;nelimli programlama y&ouml;ntemleri ile oluşturulmuş bir iş s&uuml;recinin katmanlı mimari ile geliştirilmesini g&ouml;zlemledim.</p>\r\n<p style=\"box-sizing: border-box; margin: 0px 0px 1rem; max-height: 1e+06px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">&bull; Daha &ouml;ncesinde sadece teorik bilgi sahibi olduğum sunucu sistemlerini ve sunucu elemanlarını yakından g&ouml;zlemledim, oluşan hasarlarda hasar tespiti yaptım ve m&uuml;mk&uuml;nse hasarın tamiratını ger&ccedil;ekleştirdim.</p>\r\n<p style=\"box-sizing: border-box; margin: 0px 0px 1rem; max-height: 1e+06px;  font-family: Rubik-Regular, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; \">&bull;Windows Server 2012 R2 işletim sisteminde Active Directory, Group policy gibi yapılar ile domaine bağlı makinelerin dosya erişimlerinde yetkilendirmeler yaptım, Domain'e bağlı makinelere sanal bir ortam &uuml;zerinde yetkiler verdim.</p>",
                            EndDate = new DateTime(2018, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDateFormat = "MM/yyyy",
                            ImagePath = "/StaticFiles/diler.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9652),
                            Name = "Diler Holding",
                            StartDate = new DateTime(2018, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDateFormat = "MM/yyyy",
                            SubName = "Stajer"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.ProgressBarSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgressBarValue")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProgressBarSkillses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9737),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9738),
                            ProgressBarValue = 75,
                            SkillName = ".Net Core"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9739),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9739),
                            ProgressBarValue = 65,
                            SkillName = ".Net Framework"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9740),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9741),
                            ProgressBarValue = 70,
                            SkillName = ".Net Core MVC"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9741),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9742),
                            ProgressBarValue = 70,
                            SkillName = ".Net Core Web Api"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9743),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9743),
                            ProgressBarValue = 75,
                            SkillName = "HTML"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9744),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9745),
                            ProgressBarValue = 50,
                            SkillName = "CSS"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9745),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9746),
                            ProgressBarValue = 70,
                            SkillName = "Boostrap"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9747),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9747),
                            ProgressBarValue = 55,
                            SkillName = "JQuery"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9748),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9749),
                            ProgressBarValue = 40,
                            SkillName = "JavaScript"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9750),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9750),
                            ProgressBarValue = 70,
                            SkillName = "C#"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9751),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9751),
                            ProgressBarValue = 60,
                            SkillName = "Python"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9752),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9753),
                            ProgressBarValue = 50,
                            SkillName = "Django"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9754),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9754),
                            ProgressBarValue = 25,
                            SkillName = "Flask"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9755),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9755),
                            ProgressBarValue = 70,
                            SkillName = "Sql Server - (TSQL)"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9756),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9757),
                            ProgressBarValue = 75,
                            SkillName = "Oracle - (PL/SQL)"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9757),
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9758),
                            ProgressBarValue = 60,
                            SkillName = "Knime"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.SocailMedias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SocialMediaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMediaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMediaUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocailMedias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9840),
                            Description = "Linkedin Profilim",
                            IconName = "font-icon icon-linkedin2",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9840),
                            SocialMediaName = "Linkedin",
                            SocialMediaUrl = "https://www.linkedin.com/in/berkayakar/",
                            SocialMediaUserName = "in/berkayakar"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9842),
                            Description = "Github Profilim",
                            IconName = "font-icon icon-github",
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9842),
                            SocialMediaName = "Linkedin",
                            SocialMediaUrl = "https://github.com/mberkayakardev",
                            SocialMediaUserName = "in/berkayakar"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Resume.Entities.Concrete.Technologies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UrlPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9922),
                            Height = 50,
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9923),
                            Name = ".Net Core",
                            UrlPath = "/StaticFiles/dotnetcore.svg",
                            Width = 50
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9925),
                            Height = 50,
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9926),
                            Name = ".Net Framework",
                            UrlPath = "/StaticFiles/dotnetframework.svg",
                            Width = 50
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9927),
                            Height = 50,
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9928),
                            Name = "C#",
                            UrlPath = "/StaticFiles/csharp.svg",
                            Width = 50
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9929),
                            Height = 50,
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9929),
                            Name = "Python",
                            UrlPath = "/StaticFiles/python.svg",
                            Width = 50
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9930),
                            Height = 50,
                            IsActive = true,
                            ModifiedDate = new DateTime(2023, 12, 31, 18, 23, 19, 609, DateTimeKind.Local).AddTicks(9931),
                            Name = "Django",
                            UrlPath = "/StaticFiles/django.svg",
                            Width = 50
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
